var LitDecorators = (function (t) {
  'use strict';
  function e(t, e) {
    var r = Object.keys(t);
    if (Object.getOwnPropertySymbols) {
      var n = Object.getOwnPropertySymbols(t);
      e &&
        (n = n.filter(function (e) {
          return Object.getOwnPropertyDescriptor(t, e).enumerable;
        })),
        r.push.apply(r, n);
    }
    return r;
  }
  function r(t) {
    for (var r = 1; r < arguments.length; r++) {
      var n = null != arguments[r] ? arguments[r] : {};
      r % 2
        ? e(Object(n), !0).forEach(function (e) {
            i(t, e, n[e]);
          })
        : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
        : e(Object(n)).forEach(function (e) {
            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e));
          });
    }
    return t;
  }
  function n() {
    n = function () {
      return t;
    };
    var t = {},
      e = Object.prototype,
      r = e.hasOwnProperty,
      o =
        Object.defineProperty ||
        function (t, e, r) {
          t[e] = r.value;
        },
      i = 'function' == typeof Symbol ? Symbol : {},
      u = i.iterator || '@@iterator',
      c = i.asyncIterator || '@@asyncIterator',
      a = i.toStringTag || '@@toStringTag';
    function l(t, e, r) {
      return (
        Object.defineProperty(t, e, {
          value: r,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        }),
        t[e]
      );
    }
    try {
      l({}, '');
    } catch (t) {
      l = function (t, e, r) {
        return (t[e] = r);
      };
    }
    function f(t, e, r, n) {
      var i = e && e.prototype instanceof v ? e : v,
        u = Object.create(i.prototype),
        c = new P(n || []);
      return o(u, '_invoke', {value: E(t, r, c)}), u;
    }
    function s(t, e, r) {
      try {
        return {type: 'normal', arg: t.call(e, r)};
      } catch (t) {
        return {type: 'throw', arg: t};
      }
    }
    t.wrap = f;
    var h = {};
    function v() {}
    function p() {}
    function d() {}
    var y = {};
    l(y, u, function () {
      return this;
    });
    var g = Object.getPrototypeOf,
      m = g && g(g(k([])));
    m && m !== e && r.call(m, u) && (y = m);
    var b = (d.prototype = v.prototype = Object.create(y));
    function w(t) {
      ['next', 'throw', 'return'].forEach(function (e) {
        l(t, e, function (t) {
          return this._invoke(e, t);
        });
      });
    }
    function O(t, e) {
      function n(o, i, u, c) {
        var a = s(t[o], t, i);
        if ('throw' !== a.type) {
          var l = a.arg,
            f = l.value;
          return f && 'object' == typeof f && r.call(f, '__await')
            ? e.resolve(f.__await).then(
                function (t) {
                  n('next', t, u, c);
                },
                function (t) {
                  n('throw', t, u, c);
                }
              )
            : e.resolve(f).then(
                function (t) {
                  (l.value = t), u(l);
                },
                function (t) {
                  return n('throw', t, u, c);
                }
              );
        }
        c(a.arg);
      }
      var i;
      o(this, '_invoke', {
        value: function (t, r) {
          function o() {
            return new e(function (e, o) {
              n(t, r, e, o);
            });
          }
          return (i = i ? i.then(o, o) : o());
        },
      });
    }
    function E(t, e, r) {
      var n = 'suspendedStart';
      return function (o, i) {
        if ('executing' === n) throw new Error('Generator is already running');
        if ('completed' === n) {
          if ('throw' === o) throw i;
          return S();
        }
        for (r.method = o, r.arg = i; ; ) {
          var u = r.delegate;
          if (u) {
            var c = j(u, r);
            if (c) {
              if (c === h) continue;
              return c;
            }
          }
          if ('next' === r.method) r.sent = r._sent = r.arg;
          else if ('throw' === r.method) {
            if ('suspendedStart' === n) throw ((n = 'completed'), r.arg);
            r.dispatchException(r.arg);
          } else 'return' === r.method && r.abrupt('return', r.arg);
          n = 'executing';
          var a = s(t, e, r);
          if ('normal' === a.type) {
            if (((n = r.done ? 'completed' : 'suspendedYield'), a.arg === h))
              continue;
            return {value: a.arg, done: r.done};
          }
          'throw' === a.type &&
            ((n = 'completed'), (r.method = 'throw'), (r.arg = a.arg));
        }
      };
    }
    function j(t, e) {
      var r = e.method,
        n = t.iterator[r];
      if (void 0 === n)
        return (
          (e.delegate = null),
          ('throw' === r &&
            t.iterator.return &&
            ((e.method = 'return'),
            (e.arg = void 0),
            j(t, e),
            'throw' === e.method)) ||
            ('return' !== r &&
              ((e.method = 'throw'),
              (e.arg = new TypeError(
                "The iterator does not provide a '" + r + "' method"
              )))),
          h
        );
      var o = s(n, t.iterator, e.arg);
      if ('throw' === o.type)
        return (e.method = 'throw'), (e.arg = o.arg), (e.delegate = null), h;
      var i = o.arg;
      return i
        ? i.done
          ? ((e[t.resultName] = i.value),
            (e.next = t.nextLoc),
            'return' !== e.method && ((e.method = 'next'), (e.arg = void 0)),
            (e.delegate = null),
            h)
          : i
        : ((e.method = 'throw'),
          (e.arg = new TypeError('iterator result is not an object')),
          (e.delegate = null),
          h);
    }
    function L(t) {
      var e = {tryLoc: t[0]};
      1 in t && (e.catchLoc = t[1]),
        2 in t && ((e.finallyLoc = t[2]), (e.afterLoc = t[3])),
        this.tryEntries.push(e);
    }
    function x(t) {
      var e = t.completion || {};
      (e.type = 'normal'), delete e.arg, (t.completion = e);
    }
    function P(t) {
      (this.tryEntries = [{tryLoc: 'root'}]),
        t.forEach(L, this),
        this.reset(!0);
    }
    function k(t) {
      if (t) {
        var e = t[u];
        if (e) return e.call(t);
        if ('function' == typeof t.next) return t;
        if (!isNaN(t.length)) {
          var n = -1,
            o = function e() {
              for (; ++n < t.length; )
                if (r.call(t, n)) return (e.value = t[n]), (e.done = !1), e;
              return (e.value = void 0), (e.done = !0), e;
            };
          return (o.next = o);
        }
      }
      return {next: S};
    }
    function S() {
      return {value: void 0, done: !0};
    }
    return (
      (p.prototype = d),
      o(b, 'constructor', {value: d, configurable: !0}),
      o(d, 'constructor', {value: p, configurable: !0}),
      (p.displayName = l(d, a, 'GeneratorFunction')),
      (t.isGeneratorFunction = function (t) {
        var e = 'function' == typeof t && t.constructor;
        return (
          !!e && (e === p || 'GeneratorFunction' === (e.displayName || e.name))
        );
      }),
      (t.mark = function (t) {
        return (
          Object.setPrototypeOf
            ? Object.setPrototypeOf(t, d)
            : ((t.__proto__ = d), l(t, a, 'GeneratorFunction')),
          (t.prototype = Object.create(b)),
          t
        );
      }),
      (t.awrap = function (t) {
        return {__await: t};
      }),
      w(O.prototype),
      l(O.prototype, c, function () {
        return this;
      }),
      (t.AsyncIterator = O),
      (t.async = function (e, r, n, o, i) {
        void 0 === i && (i = Promise);
        var u = new O(f(e, r, n, o), i);
        return t.isGeneratorFunction(r)
          ? u
          : u.next().then(function (t) {
              return t.done ? t.value : u.next();
            });
      }),
      w(b),
      l(b, a, 'Generator'),
      l(b, u, function () {
        return this;
      }),
      l(b, 'toString', function () {
        return '[object Generator]';
      }),
      (t.keys = function (t) {
        var e = Object(t),
          r = [];
        for (var n in e) r.push(n);
        return (
          r.reverse(),
          function t() {
            for (; r.length; ) {
              var n = r.pop();
              if (n in e) return (t.value = n), (t.done = !1), t;
            }
            return (t.done = !0), t;
          }
        );
      }),
      (t.values = k),
      (P.prototype = {
        constructor: P,
        reset: function (t) {
          if (
            ((this.prev = 0),
            (this.next = 0),
            (this.sent = this._sent = void 0),
            (this.done = !1),
            (this.delegate = null),
            (this.method = 'next'),
            (this.arg = void 0),
            this.tryEntries.forEach(x),
            !t)
          )
            for (var e in this)
              't' === e.charAt(0) &&
                r.call(this, e) &&
                !isNaN(+e.slice(1)) &&
                (this[e] = void 0);
        },
        stop: function () {
          this.done = !0;
          var t = this.tryEntries[0].completion;
          if ('throw' === t.type) throw t.arg;
          return this.rval;
        },
        dispatchException: function (t) {
          if (this.done) throw t;
          var e = this;
          function n(r, n) {
            return (
              (u.type = 'throw'),
              (u.arg = t),
              (e.next = r),
              n && ((e.method = 'next'), (e.arg = void 0)),
              !!n
            );
          }
          for (var o = this.tryEntries.length - 1; o >= 0; --o) {
            var i = this.tryEntries[o],
              u = i.completion;
            if ('root' === i.tryLoc) return n('end');
            if (i.tryLoc <= this.prev) {
              var c = r.call(i, 'catchLoc'),
                a = r.call(i, 'finallyLoc');
              if (c && a) {
                if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                if (this.prev < i.finallyLoc) return n(i.finallyLoc);
              } else if (c) {
                if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
              } else {
                if (!a)
                  throw new Error('try statement without catch or finally');
                if (this.prev < i.finallyLoc) return n(i.finallyLoc);
              }
            }
          }
        },
        abrupt: function (t, e) {
          for (var n = this.tryEntries.length - 1; n >= 0; --n) {
            var o = this.tryEntries[n];
            if (
              o.tryLoc <= this.prev &&
              r.call(o, 'finallyLoc') &&
              this.prev < o.finallyLoc
            ) {
              var i = o;
              break;
            }
          }
          i &&
            ('break' === t || 'continue' === t) &&
            i.tryLoc <= e &&
            e <= i.finallyLoc &&
            (i = null);
          var u = i ? i.completion : {};
          return (
            (u.type = t),
            (u.arg = e),
            i
              ? ((this.method = 'next'), (this.next = i.finallyLoc), h)
              : this.complete(u)
          );
        },
        complete: function (t, e) {
          if ('throw' === t.type) throw t.arg;
          return (
            'break' === t.type || 'continue' === t.type
              ? (this.next = t.arg)
              : 'return' === t.type
              ? ((this.rval = this.arg = t.arg),
                (this.method = 'return'),
                (this.next = 'end'))
              : 'normal' === t.type && e && (this.next = e),
            h
          );
        },
        finish: function (t) {
          for (var e = this.tryEntries.length - 1; e >= 0; --e) {
            var r = this.tryEntries[e];
            if (r.finallyLoc === t)
              return this.complete(r.completion, r.afterLoc), x(r), h;
          }
        },
        catch: function (t) {
          for (var e = this.tryEntries.length - 1; e >= 0; --e) {
            var r = this.tryEntries[e];
            if (r.tryLoc === t) {
              var n = r.completion;
              if ('throw' === n.type) {
                var o = n.arg;
                x(r);
              }
              return o;
            }
          }
          throw new Error('illegal catch attempt');
        },
        delegateYield: function (t, e, r) {
          return (
            (this.delegate = {iterator: k(t), resultName: e, nextLoc: r}),
            'next' === this.method && (this.arg = void 0),
            h
          );
        },
      }),
      t
    );
  }
  function o(t, e, r, n, o, i, u) {
    try {
      var c = t[i](u),
        a = c.value;
    } catch (t) {
      return void r(t);
    }
    c.done ? e(a) : Promise.resolve(a).then(n, o);
  }
  function i(t, e, r) {
    return (
      (e = (function (t) {
        var e = (function (t, e) {
          if ('object' != typeof t || null === t) return t;
          var r = t[Symbol.toPrimitive];
          if (void 0 !== r) {
            var n = r.call(t, e || 'default');
            if ('object' != typeof n) return n;
            throw new TypeError('@@toPrimitive must return a primitive value.');
          }
          return ('string' === e ? String : Number)(t);
        })(t, 'string');
        return 'symbol' == typeof e ? e : String(e);
      })(e)) in t
        ? Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0,
          })
        : (t[e] = r),
      t
    );
  }
  var u = function (t, e) {
      return 'method' === e.kind && e.descriptor && !('value' in e.descriptor)
        ? r(
            r({}, e),
            {},
            {
              finisher: function (r) {
                r.createProperty(e.key, t);
              },
            }
          )
        : {
            kind: 'field',
            key: Symbol(),
            placement: 'own',
            descriptor: {},
            originalKey: e.key,
            initializer: function () {
              'function' == typeof e.initializer &&
                (this[e.key] = e.initializer.call(this));
            },
            finisher: function (r) {
              r.createProperty(e.key, t);
            },
          };
    },
    c = function (t, e, r) {
      e.constructor.createProperty(r, t);
    };
  function a(t) {
    return function (e, r) {
      return void 0 !== r ? c(t, e, r) : u(t, e);
    };
  }
  var l,
    f = function (t) {
      var e = t.finisher,
        n = t.descriptor;
      return function (t, o) {
        var i;
        if (void 0 === o) {
          var u = null !== (i = t.originalKey) && void 0 !== i ? i : t.key,
            c =
              null != n
                ? {
                    kind: 'method',
                    placement: 'prototype',
                    key: u,
                    descriptor: n(t.key),
                  }
                : r(r({}, t), {}, {key: u});
          return (
            null != e &&
              (c.finisher = function (t) {
                e(t, u);
              }),
            c
          );
        }
        var a = t.constructor;
        void 0 !== n && Object.defineProperty(t, o, n(o)), null == e || e(a, o);
      };
    };
  var s =
    null !=
    (null === (l = window.HTMLSlotElement) || void 0 === l
      ? void 0
      : l.prototype.assignedElements)
      ? function (t, e) {
          return t.assignedElements(e);
        }
      : function (t, e) {
          return t.assignedNodes(e).filter(function (t) {
            return t.nodeType === Node.ELEMENT_NODE;
          });
        };
  function h(t) {
    var e = null != t ? t : {},
      r = e.slot,
      n = e.selector;
    return f({
      descriptor: function (e) {
        return {
          get: function () {
            var e,
              o = 'slot'.concat(r ? '[name='.concat(r, ']') : ':not([name])'),
              i =
                null === (e = this.renderRoot) || void 0 === e
                  ? void 0
                  : e.querySelector(o),
              u = null != i ? s(i, t) : [];
            return n
              ? u.filter(function (t) {
                  return t.matches(n);
                })
              : u;
          },
          enumerable: !0,
          configurable: !0,
        };
      },
    });
  }
  return (
    (t.customElement = function (t) {
      return function (e) {
        return 'function' == typeof e
          ? (function (t, e) {
              return customElements.define(t, e), e;
            })(t, e)
          : (function (t, e) {
              return {
                kind: e.kind,
                elements: e.elements,
                finisher: function (e) {
                  customElements.define(t, e);
                },
              };
            })(t, e);
      };
    }),
    (t.eventOptions = function (t) {
      return f({
        finisher: function (e, r) {
          Object.assign(e.prototype[r], t);
        },
      });
    }),
    (t.property = a),
    (t.query = function (t, e) {
      return f({
        descriptor: function (r) {
          var n = {
            get: function () {
              var e, r;
              return null !==
                (r =
                  null === (e = this.renderRoot) || void 0 === e
                    ? void 0
                    : e.querySelector(t)) && void 0 !== r
                ? r
                : null;
            },
            enumerable: !0,
            configurable: !0,
          };
          if (e) {
            var o = 'symbol' == typeof r ? Symbol() : '__'.concat(r);
            n.get = function () {
              var e, r;
              return (
                void 0 === this[o] &&
                  (this[o] =
                    null !==
                      (r =
                        null === (e = this.renderRoot) || void 0 === e
                          ? void 0
                          : e.querySelector(t)) && void 0 !== r
                      ? r
                      : null),
                this[o]
              );
            };
          }
          return n;
        },
      });
    }),
    (t.queryAll = function (t) {
      return f({
        descriptor: function (e) {
          return {
            get: function () {
              var e, r;
              return null !==
                (r =
                  null === (e = this.renderRoot) || void 0 === e
                    ? void 0
                    : e.querySelectorAll(t)) && void 0 !== r
                ? r
                : [];
            },
            enumerable: !0,
            configurable: !0,
          };
        },
      });
    }),
    (t.queryAssignedElements = h),
    (t.queryAssignedNodes = function (t, e, r) {
      var n,
        o = t;
      return (
        'object' == typeof t ? ((o = t.slot), (n = t)) : (n = {flatten: e}),
        r
          ? h({slot: o, flatten: e, selector: r})
          : f({
              descriptor: function (t) {
                return {
                  get: function () {
                    var t,
                      e,
                      r = 'slot'.concat(
                        o ? '[name='.concat(o, ']') : ':not([name])'
                      ),
                      i =
                        null === (t = this.renderRoot) || void 0 === t
                          ? void 0
                          : t.querySelector(r);
                    return null !==
                      (e = null == i ? void 0 : i.assignedNodes(n)) &&
                      void 0 !== e
                      ? e
                      : [];
                  },
                  enumerable: !0,
                  configurable: !0,
                };
              },
            })
      );
    }),
    (t.queryAsync = function (t) {
      return f({
        descriptor: function (e) {
          return {
            get: function () {
              var e,
                r = this;
              return ((e = n().mark(function e() {
                var o;
                return n().wrap(function (e) {
                  for (;;)
                    switch ((e.prev = e.next)) {
                      case 0:
                        return (e.next = 2), r.updateComplete;
                      case 2:
                        return e.abrupt(
                          'return',
                          null === (o = r.renderRoot) || void 0 === o
                            ? void 0
                            : o.querySelector(t)
                        );
                      case 3:
                      case 'end':
                        return e.stop();
                    }
                }, e);
              })),
              function () {
                var t = this,
                  r = arguments;
                return new Promise(function (n, i) {
                  var u = e.apply(t, r);
                  function c(t) {
                    o(u, n, i, c, a, 'next', t);
                  }
                  function a(t) {
                    o(u, n, i, c, a, 'throw', t);
                  }
                  c(void 0);
                });
              })();
            },
            enumerable: !0,
            configurable: !0,
          };
        },
      });
    }),
    (t.state = function (t) {
      return a(r(r({}, t), {}, {state: !0}));
    }),
    Object.defineProperty(t, '__esModule', {value: !0}),
    t
  );
})({});
//# sourceMappingURL=lit-decorators.iife.min.js.map
