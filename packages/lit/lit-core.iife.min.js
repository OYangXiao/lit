var Lit = (function (t) {
  'use strict';
  function e() {
    e = function () {
      return t;
    };
    var t = {},
      n = Object.prototype,
      r = n.hasOwnProperty,
      i =
        Object.defineProperty ||
        function (t, e, n) {
          t[e] = n.value;
        },
      o = 'function' == typeof Symbol ? Symbol : {},
      a = o.iterator || '@@iterator',
      l = o.asyncIterator || '@@asyncIterator',
      s = o.toStringTag || '@@toStringTag';
    function u(t, e, n) {
      return (
        Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        }),
        t[e]
      );
    }
    try {
      u({}, '');
    } catch (t) {
      u = function (t, e, n) {
        return (t[e] = n);
      };
    }
    function c(t, e, n, r) {
      var o = e && e.prototype instanceof f ? e : f,
        a = Object.create(o.prototype),
        l = new x(r || []);
      return i(a, '_invoke', {value: $(t, n, l)}), a;
    }
    function h(t, e, n) {
      try {
        return {type: 'normal', arg: t.call(e, n)};
      } catch (t) {
        return {type: 'throw', arg: t};
      }
    }
    t.wrap = c;
    var d = {};
    function f() {}
    function p() {}
    function v() {}
    var y = {};
    u(y, a, function () {
      return this;
    });
    var m = Object.getPrototypeOf,
      _ = m && m(m(E([])));
    _ && _ !== n && r.call(_, a) && (y = _);
    var g = (v.prototype = f.prototype = Object.create(y));
    function b(t) {
      ['next', 'throw', 'return'].forEach(function (e) {
        u(t, e, function (t) {
          return this._invoke(e, t);
        });
      });
    }
    function w(t, e) {
      function n(i, o, a, l) {
        var s = h(t[i], t, o);
        if ('throw' !== s.type) {
          var u = s.arg,
            c = u.value;
          return c && 'object' == typeof c && r.call(c, '__await')
            ? e.resolve(c.__await).then(
                function (t) {
                  n('next', t, a, l);
                },
                function (t) {
                  n('throw', t, a, l);
                }
              )
            : e.resolve(c).then(
                function (t) {
                  (u.value = t), a(u);
                },
                function (t) {
                  return n('throw', t, a, l);
                }
              );
        }
        l(s.arg);
      }
      var o;
      i(this, '_invoke', {
        value: function (t, r) {
          function i() {
            return new e(function (e, i) {
              n(t, r, e, i);
            });
          }
          return (o = o ? o.then(i, i) : i());
        },
      });
    }
    function $(t, e, n) {
      var r = 'suspendedStart';
      return function (i, o) {
        if ('executing' === r) throw new Error('Generator is already running');
        if ('completed' === r) {
          if ('throw' === i) throw o;
          return C();
        }
        for (n.method = i, n.arg = o; ; ) {
          var a = n.delegate;
          if (a) {
            var l = P(a, n);
            if (l) {
              if (l === d) continue;
              return l;
            }
          }
          if ('next' === n.method) n.sent = n._sent = n.arg;
          else if ('throw' === n.method) {
            if ('suspendedStart' === r) throw ((r = 'completed'), n.arg);
            n.dispatchException(n.arg);
          } else 'return' === n.method && n.abrupt('return', n.arg);
          r = 'executing';
          var s = h(t, e, n);
          if ('normal' === s.type) {
            if (((r = n.done ? 'completed' : 'suspendedYield'), s.arg === d))
              continue;
            return {value: s.arg, done: n.done};
          }
          'throw' === s.type &&
            ((r = 'completed'), (n.method = 'throw'), (n.arg = s.arg));
        }
      };
    }
    function P(t, e) {
      var n = e.method,
        r = t.iterator[n];
      if (void 0 === r)
        return (
          (e.delegate = null),
          ('throw' === n &&
            t.iterator.return &&
            ((e.method = 'return'),
            (e.arg = void 0),
            P(t, e),
            'throw' === e.method)) ||
            ('return' !== n &&
              ((e.method = 'throw'),
              (e.arg = new TypeError(
                "The iterator does not provide a '" + n + "' method"
              )))),
          d
        );
      var i = h(r, t.iterator, e.arg);
      if ('throw' === i.type)
        return (e.method = 'throw'), (e.arg = i.arg), (e.delegate = null), d;
      var o = i.arg;
      return o
        ? o.done
          ? ((e[t.resultName] = o.value),
            (e.next = t.nextLoc),
            'return' !== e.method && ((e.method = 'next'), (e.arg = void 0)),
            (e.delegate = null),
            d)
          : o
        : ((e.method = 'throw'),
          (e.arg = new TypeError('iterator result is not an object')),
          (e.delegate = null),
          d);
    }
    function S(t) {
      var e = {tryLoc: t[0]};
      1 in t && (e.catchLoc = t[1]),
        2 in t && ((e.finallyLoc = t[2]), (e.afterLoc = t[3])),
        this.tryEntries.push(e);
    }
    function k(t) {
      var e = t.completion || {};
      (e.type = 'normal'), delete e.arg, (t.completion = e);
    }
    function x(t) {
      (this.tryEntries = [{tryLoc: 'root'}]),
        t.forEach(S, this),
        this.reset(!0);
    }
    function E(t) {
      if (t) {
        var e = t[a];
        if (e) return e.call(t);
        if ('function' == typeof t.next) return t;
        if (!isNaN(t.length)) {
          var n = -1,
            i = function e() {
              for (; ++n < t.length; )
                if (r.call(t, n)) return (e.value = t[n]), (e.done = !1), e;
              return (e.value = void 0), (e.done = !0), e;
            };
          return (i.next = i);
        }
      }
      return {next: C};
    }
    function C() {
      return {value: void 0, done: !0};
    }
    return (
      (p.prototype = v),
      i(g, 'constructor', {value: v, configurable: !0}),
      i(v, 'constructor', {value: p, configurable: !0}),
      (p.displayName = u(v, s, 'GeneratorFunction')),
      (t.isGeneratorFunction = function (t) {
        var e = 'function' == typeof t && t.constructor;
        return (
          !!e && (e === p || 'GeneratorFunction' === (e.displayName || e.name))
        );
      }),
      (t.mark = function (t) {
        return (
          Object.setPrototypeOf
            ? Object.setPrototypeOf(t, v)
            : ((t.__proto__ = v), u(t, s, 'GeneratorFunction')),
          (t.prototype = Object.create(g)),
          t
        );
      }),
      (t.awrap = function (t) {
        return {__await: t};
      }),
      b(w.prototype),
      u(w.prototype, l, function () {
        return this;
      }),
      (t.AsyncIterator = w),
      (t.async = function (e, n, r, i, o) {
        void 0 === o && (o = Promise);
        var a = new w(c(e, n, r, i), o);
        return t.isGeneratorFunction(n)
          ? a
          : a.next().then(function (t) {
              return t.done ? t.value : a.next();
            });
      }),
      b(g),
      u(g, s, 'Generator'),
      u(g, a, function () {
        return this;
      }),
      u(g, 'toString', function () {
        return '[object Generator]';
      }),
      (t.keys = function (t) {
        var e = Object(t),
          n = [];
        for (var r in e) n.push(r);
        return (
          n.reverse(),
          function t() {
            for (; n.length; ) {
              var r = n.pop();
              if (r in e) return (t.value = r), (t.done = !1), t;
            }
            return (t.done = !0), t;
          }
        );
      }),
      (t.values = E),
      (x.prototype = {
        constructor: x,
        reset: function (t) {
          if (
            ((this.prev = 0),
            (this.next = 0),
            (this.sent = this._sent = void 0),
            (this.done = !1),
            (this.delegate = null),
            (this.method = 'next'),
            (this.arg = void 0),
            this.tryEntries.forEach(k),
            !t)
          )
            for (var e in this)
              't' === e.charAt(0) &&
                r.call(this, e) &&
                !isNaN(+e.slice(1)) &&
                (this[e] = void 0);
        },
        stop: function () {
          this.done = !0;
          var t = this.tryEntries[0].completion;
          if ('throw' === t.type) throw t.arg;
          return this.rval;
        },
        dispatchException: function (t) {
          if (this.done) throw t;
          var e = this;
          function n(n, r) {
            return (
              (a.type = 'throw'),
              (a.arg = t),
              (e.next = n),
              r && ((e.method = 'next'), (e.arg = void 0)),
              !!r
            );
          }
          for (var i = this.tryEntries.length - 1; i >= 0; --i) {
            var o = this.tryEntries[i],
              a = o.completion;
            if ('root' === o.tryLoc) return n('end');
            if (o.tryLoc <= this.prev) {
              var l = r.call(o, 'catchLoc'),
                s = r.call(o, 'finallyLoc');
              if (l && s) {
                if (this.prev < o.catchLoc) return n(o.catchLoc, !0);
                if (this.prev < o.finallyLoc) return n(o.finallyLoc);
              } else if (l) {
                if (this.prev < o.catchLoc) return n(o.catchLoc, !0);
              } else {
                if (!s)
                  throw new Error('try statement without catch or finally');
                if (this.prev < o.finallyLoc) return n(o.finallyLoc);
              }
            }
          }
        },
        abrupt: function (t, e) {
          for (var n = this.tryEntries.length - 1; n >= 0; --n) {
            var i = this.tryEntries[n];
            if (
              i.tryLoc <= this.prev &&
              r.call(i, 'finallyLoc') &&
              this.prev < i.finallyLoc
            ) {
              var o = i;
              break;
            }
          }
          o &&
            ('break' === t || 'continue' === t) &&
            o.tryLoc <= e &&
            e <= o.finallyLoc &&
            (o = null);
          var a = o ? o.completion : {};
          return (
            (a.type = t),
            (a.arg = e),
            o
              ? ((this.method = 'next'), (this.next = o.finallyLoc), d)
              : this.complete(a)
          );
        },
        complete: function (t, e) {
          if ('throw' === t.type) throw t.arg;
          return (
            'break' === t.type || 'continue' === t.type
              ? (this.next = t.arg)
              : 'return' === t.type
              ? ((this.rval = this.arg = t.arg),
                (this.method = 'return'),
                (this.next = 'end'))
              : 'normal' === t.type && e && (this.next = e),
            d
          );
        },
        finish: function (t) {
          for (var e = this.tryEntries.length - 1; e >= 0; --e) {
            var n = this.tryEntries[e];
            if (n.finallyLoc === t)
              return this.complete(n.completion, n.afterLoc), k(n), d;
          }
        },
        catch: function (t) {
          for (var e = this.tryEntries.length - 1; e >= 0; --e) {
            var n = this.tryEntries[e];
            if (n.tryLoc === t) {
              var r = n.completion;
              if ('throw' === r.type) {
                var i = r.arg;
                k(n);
              }
              return i;
            }
          }
          throw new Error('illegal catch attempt');
        },
        delegateYield: function (t, e, n) {
          return (
            (this.delegate = {iterator: E(t), resultName: e, nextLoc: n}),
            'next' === this.method && (this.arg = void 0),
            d
          );
        },
      }),
      t
    );
  }
  function n(t, e, n, r, i, o, a) {
    try {
      var l = t[o](a),
        s = l.value;
    } catch (t) {
      return void n(t);
    }
    l.done ? e(s) : Promise.resolve(s).then(r, i);
  }
  function r(t, e) {
    if (!(t instanceof e))
      throw new TypeError('Cannot call a class as a function');
  }
  function i(t, e) {
    for (var n = 0; n < e.length; n++) {
      var r = e[n];
      (r.enumerable = r.enumerable || !1),
        (r.configurable = !0),
        'value' in r && (r.writable = !0),
        Object.defineProperty(t, w(r.key), r);
    }
  }
  function o(t, e, n) {
    return (
      e && i(t.prototype, e),
      n && i(t, n),
      Object.defineProperty(t, 'prototype', {writable: !1}),
      t
    );
  }
  function a(t, e, n) {
    return (
      (e = w(e)) in t
        ? Object.defineProperty(t, e, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0,
          })
        : (t[e] = n),
      t
    );
  }
  function l(t, e) {
    if ('function' != typeof e && null !== e)
      throw new TypeError('Super expression must either be null or a function');
    (t.prototype = Object.create(e && e.prototype, {
      constructor: {value: t, writable: !0, configurable: !0},
    })),
      Object.defineProperty(t, 'prototype', {writable: !1}),
      e && u(t, e);
  }
  function s(t) {
    return (
      (s = Object.setPrototypeOf
        ? Object.getPrototypeOf.bind()
        : function (t) {
            return t.__proto__ || Object.getPrototypeOf(t);
          }),
      s(t)
    );
  }
  function u(t, e) {
    return (
      (u = Object.setPrototypeOf
        ? Object.setPrototypeOf.bind()
        : function (t, e) {
            return (t.__proto__ = e), t;
          }),
      u(t, e)
    );
  }
  function c() {
    if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ('function' == typeof Proxy) return !0;
    try {
      return (
        Boolean.prototype.valueOf.call(
          Reflect.construct(Boolean, [], function () {})
        ),
        !0
      );
    } catch (t) {
      return !1;
    }
  }
  function h(t, e, n) {
    return (
      (h = c()
        ? Reflect.construct.bind()
        : function (t, e, n) {
            var r = [null];
            r.push.apply(r, e);
            var i = new (Function.bind.apply(t, r))();
            return n && u(i, n.prototype), i;
          }),
      h.apply(null, arguments)
    );
  }
  function d(t) {
    var e = 'function' == typeof Map ? new Map() : void 0;
    return (
      (d = function (t) {
        if (
          null === t ||
          ((n = t), -1 === Function.toString.call(n).indexOf('[native code]'))
        )
          return t;
        var n;
        if ('function' != typeof t)
          throw new TypeError(
            'Super expression must either be null or a function'
          );
        if (void 0 !== e) {
          if (e.has(t)) return e.get(t);
          e.set(t, r);
        }
        function r() {
          return h(t, arguments, s(this).constructor);
        }
        return (
          (r.prototype = Object.create(t.prototype, {
            constructor: {
              value: r,
              enumerable: !1,
              writable: !0,
              configurable: !0,
            },
          })),
          u(r, t)
        );
      }),
      d(t)
    );
  }
  function f(t) {
    if (void 0 === t)
      throw new ReferenceError(
        "this hasn't been initialised - super() hasn't been called"
      );
    return t;
  }
  function p(t) {
    var e = c();
    return function () {
      var n,
        r = s(t);
      if (e) {
        var i = s(this).constructor;
        n = Reflect.construct(r, arguments, i);
      } else n = r.apply(this, arguments);
      return (function (t, e) {
        if (e && ('object' == typeof e || 'function' == typeof e)) return e;
        if (void 0 !== e)
          throw new TypeError(
            'Derived constructors may only return object or undefined'
          );
        return f(t);
      })(this, n);
    };
  }
  function v() {
    return (
      (v =
        'undefined' != typeof Reflect && Reflect.get
          ? Reflect.get.bind()
          : function (t, e, n) {
              var r = (function (t, e) {
                for (
                  ;
                  !Object.prototype.hasOwnProperty.call(t, e) &&
                  null !== (t = s(t));

                );
                return t;
              })(t, e);
              if (r) {
                var i = Object.getOwnPropertyDescriptor(r, e);
                return i.get
                  ? i.get.call(arguments.length < 3 ? t : n)
                  : i.value;
              }
            }),
      v.apply(this, arguments)
    );
  }
  function y(t, e) {
    return (
      (function (t) {
        if (Array.isArray(t)) return t;
      })(t) ||
      (function (t, e) {
        var n =
          null == t
            ? null
            : ('undefined' != typeof Symbol && t[Symbol.iterator]) ||
              t['@@iterator'];
        if (null != n) {
          var r,
            i,
            o,
            a,
            l = [],
            s = !0,
            u = !1;
          try {
            if (((o = (n = n.call(t)).next), 0 === e)) {
              if (Object(n) !== n) return;
              s = !1;
            } else
              for (
                ;
                !(s = (r = o.call(n)).done) &&
                (l.push(r.value), l.length !== e);
                s = !0
              );
          } catch (t) {
            (u = !0), (i = t);
          } finally {
            try {
              if (!s && null != n.return && ((a = n.return()), Object(a) !== a))
                return;
            } finally {
              if (u) throw i;
            }
          }
          return l;
        }
      })(t, e) ||
      _(t, e) ||
      (function () {
        throw new TypeError(
          'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
        );
      })()
    );
  }
  function m(t) {
    return (
      (function (t) {
        if (Array.isArray(t)) return g(t);
      })(t) ||
      (function (t) {
        if (
          ('undefined' != typeof Symbol && null != t[Symbol.iterator]) ||
          null != t['@@iterator']
        )
          return Array.from(t);
      })(t) ||
      _(t) ||
      (function () {
        throw new TypeError(
          'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
        );
      })()
    );
  }
  function _(t, e) {
    if (t) {
      if ('string' == typeof t) return g(t, e);
      var n = Object.prototype.toString.call(t).slice(8, -1);
      return (
        'Object' === n && t.constructor && (n = t.constructor.name),
        'Map' === n || 'Set' === n
          ? Array.from(t)
          : 'Arguments' === n ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          ? g(t, e)
          : void 0
      );
    }
  }
  function g(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
    return r;
  }
  function b(t, e) {
    var n =
      ('undefined' != typeof Symbol && t[Symbol.iterator]) || t['@@iterator'];
    if (!n) {
      if (
        Array.isArray(t) ||
        (n = _(t)) ||
        (e && t && 'number' == typeof t.length)
      ) {
        n && (t = n);
        var r = 0,
          i = function () {};
        return {
          s: i,
          n: function () {
            return r >= t.length ? {done: !0} : {done: !1, value: t[r++]};
          },
          e: function (t) {
            throw t;
          },
          f: i,
        };
      }
      throw new TypeError(
        'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
      );
    }
    var o,
      a = !0,
      l = !1;
    return {
      s: function () {
        n = n.call(t);
      },
      n: function () {
        var t = n.next();
        return (a = t.done), t;
      },
      e: function (t) {
        (l = !0), (o = t);
      },
      f: function () {
        try {
          a || null == n.return || n.return();
        } finally {
          if (l) throw o;
        }
      },
    };
  }
  function w(t) {
    var e = (function (t, e) {
      if ('object' != typeof t || null === t) return t;
      var n = t[Symbol.toPrimitive];
      if (void 0 !== n) {
        var r = n.call(t, e || 'default');
        if ('object' != typeof r) return r;
        throw new TypeError('@@toPrimitive must return a primitive value.');
      }
      return ('string' === e ? String : Number)(t);
    })(t, 'string');
    return 'symbol' == typeof e ? e : String(e);
  }
  var $,
    P,
    S = window,
    k =
      S.ShadowRoot &&
      (void 0 === S.ShadyCSS || S.ShadyCSS.nativeShadow) &&
      'adoptedStyleSheets' in Document.prototype &&
      'replace' in CSSStyleSheet.prototype,
    x = Symbol(),
    E = new WeakMap(),
    C = (function () {
      function t(e, n, i) {
        if ((r(this, t), (this._$cssResult$ = !0), i !== x))
          throw new Error(
            'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'
          );
        (this.cssText = e), (this._strings = n);
      }
      return (
        o(t, [
          {
            key: 'styleSheet',
            get: function () {
              var t = this._styleSheet,
                e = this._strings;
              if (k && void 0 === t) {
                var n = void 0 !== e && 1 === e.length;
                n && (t = E.get(e)),
                  void 0 === t &&
                    ((this._styleSheet = t = new CSSStyleSheet()).replaceSync(
                      this.cssText
                    ),
                    n && E.set(e, t));
              }
              return t;
            },
          },
          {
            key: 'toString',
            value: function () {
              return this.cssText;
            },
          },
        ]),
        t
      );
    })(),
    O = function (t) {
      return new C('string' == typeof t ? t : String(t), void 0, x);
    },
    T = function (t, e) {
      k
        ? (t.adoptedStyleSheets = e.map(function (t) {
            return t instanceof CSSStyleSheet ? t : t.styleSheet;
          }))
        : e.forEach(function (e) {
            var n = document.createElement('style'),
              r = S.litNonce;
            void 0 !== r && n.setAttribute('nonce', r),
              (n.textContent = e.cssText),
              t.appendChild(n);
          });
    },
    N = k
      ? function (t) {
          return t;
        }
      : function (t) {
          return t instanceof CSSStyleSheet
            ? (function (t) {
                var e,
                  n = '',
                  r = b(t.cssRules);
                try {
                  for (r.s(); !(e = r.n()).done; ) n += e.value.cssText;
                } catch (t) {
                  r.e(t);
                } finally {
                  r.f();
                }
                return O(n);
              })(t)
            : t;
        },
    A = window,
    V = A.trustedTypes,
    j = V ? V.emptyScript : '',
    L = A.reactiveElementPolyfillSupport,
    U = {
      toAttribute: function (t, e) {
        switch (e) {
          case Boolean:
            t = t ? j : null;
            break;
          case Object:
          case Array:
            t = null == t ? t : JSON.stringify(t);
        }
        return t;
      },
      fromAttribute: function (t, e) {
        var n = t;
        switch (e) {
          case Boolean:
            n = null !== t;
            break;
          case Number:
            n = null === t ? null : Number(t);
            break;
          case Object:
          case Array:
            try {
              n = JSON.parse(t);
            } catch (t) {
              n = null;
            }
        }
        return n;
      },
    },
    R = function (t, e) {
      return e !== t && (e == e || t == t);
    },
    M = {attribute: !0, type: String, converter: U, reflect: !1, hasChanged: R},
    I = 'finalized',
    z = (function (t) {
      l(u, t);
      var i,
        a,
        s = p(u);
      function u() {
        var t;
        return (
          r(this, u),
          ((t = s.call(this)).__instanceProperties = new Map()),
          (t.isUpdatePending = !1),
          (t.hasUpdated = !1),
          (t.__reflectingProperty = null),
          t._initialize(),
          t
        );
      }
      return (
        o(
          u,
          [
            {
              key: '_initialize',
              value: function () {
                var t,
                  e = this;
                (this.__updatePromise = new Promise(function (t) {
                  return (e.enableUpdating = t);
                })),
                  (this._$changedProperties = new Map()),
                  this.__saveInstanceProperties(),
                  this.requestUpdate(),
                  null === (t = this.constructor._initializers) ||
                    void 0 === t ||
                    t.forEach(function (t) {
                      return t(e);
                    });
              },
            },
            {
              key: 'addController',
              value: function (t) {
                var e, n;
                (null !== (e = this.__controllers) && void 0 !== e
                  ? e
                  : (this.__controllers = [])
                ).push(t),
                  void 0 !== this.renderRoot &&
                    this.isConnected &&
                    (null === (n = t.hostConnected) ||
                      void 0 === n ||
                      n.call(t));
              },
            },
            {
              key: 'removeController',
              value: function (t) {
                var e;
                null === (e = this.__controllers) ||
                  void 0 === e ||
                  e.splice(this.__controllers.indexOf(t) >>> 0, 1);
              },
            },
            {
              key: '__saveInstanceProperties',
              value: function () {
                var t = this;
                this.constructor.elementProperties.forEach(function (e, n) {
                  t.hasOwnProperty(n) &&
                    (t.__instanceProperties.set(n, t[n]), delete t[n]);
                });
              },
            },
            {
              key: 'createRenderRoot',
              value: function () {
                var t,
                  e =
                    null !== (t = this.shadowRoot) && void 0 !== t
                      ? t
                      : this.attachShadow(this.constructor.shadowRootOptions);
                return T(e, this.constructor.elementStyles), e;
              },
            },
            {
              key: 'connectedCallback',
              value: function () {
                var t;
                void 0 === this.renderRoot &&
                  (this.renderRoot = this.createRenderRoot()),
                  this.enableUpdating(!0),
                  null === (t = this.__controllers) ||
                    void 0 === t ||
                    t.forEach(function (t) {
                      var e;
                      return null === (e = t.hostConnected) || void 0 === e
                        ? void 0
                        : e.call(t);
                    });
              },
            },
            {key: 'enableUpdating', value: function (t) {}},
            {
              key: 'disconnectedCallback',
              value: function () {
                var t;
                null === (t = this.__controllers) ||
                  void 0 === t ||
                  t.forEach(function (t) {
                    var e;
                    return null === (e = t.hostDisconnected) || void 0 === e
                      ? void 0
                      : e.call(t);
                  });
              },
            },
            {
              key: 'attributeChangedCallback',
              value: function (t, e, n) {
                this._$attributeToProperty(t, n);
              },
            },
            {
              key: '__propertyToAttribute',
              value: function (t, e) {
                var n,
                  r =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : M,
                  i = this.constructor.__attributeNameForProperty(t, r);
                if (void 0 !== i && !0 === r.reflect) {
                  var o = (
                    void 0 !==
                    (null === (n = r.converter) || void 0 === n
                      ? void 0
                      : n.toAttribute)
                      ? r.converter
                      : U
                  ).toAttribute(e, r.type);
                  (this.__reflectingProperty = t),
                    null == o
                      ? this.removeAttribute(i)
                      : this.setAttribute(i, o),
                    (this.__reflectingProperty = null);
                }
              },
            },
            {
              key: '_$attributeToProperty',
              value: function (t, e) {
                var n,
                  r = this.constructor,
                  i = r.__attributeToPropertyMap.get(t);
                if (void 0 !== i && this.__reflectingProperty !== i) {
                  var o = r.getPropertyOptions(i),
                    a =
                      'function' == typeof o.converter
                        ? {fromAttribute: o.converter}
                        : void 0 !==
                          (null === (n = o.converter) || void 0 === n
                            ? void 0
                            : n.fromAttribute)
                        ? o.converter
                        : U;
                  (this.__reflectingProperty = i),
                    (this[i] = a.fromAttribute(e, o.type)),
                    (this.__reflectingProperty = null);
                }
              },
            },
            {
              key: 'requestUpdate',
              value: function (t, e, n) {
                var r = !0;
                void 0 !== t &&
                  ((
                    (n = n || this.constructor.getPropertyOptions(t))
                      .hasChanged || R
                  )(this[t], e)
                    ? (this._$changedProperties.has(t) ||
                        this._$changedProperties.set(t, e),
                      !0 === n.reflect &&
                        this.__reflectingProperty !== t &&
                        (void 0 === this.__reflectingProperties &&
                          (this.__reflectingProperties = new Map()),
                        this.__reflectingProperties.set(t, n)))
                    : (r = !1));
                !this.isUpdatePending &&
                  r &&
                  (this.__updatePromise = this.__enqueueUpdate());
              },
            },
            {
              key: '__enqueueUpdate',
              value:
                ((i = e().mark(function t() {
                  var n;
                  return e().wrap(
                    function (t) {
                      for (;;)
                        switch ((t.prev = t.next)) {
                          case 0:
                            return (
                              (this.isUpdatePending = !0),
                              (t.prev = 1),
                              (t.next = 4),
                              this.__updatePromise
                            );
                          case 4:
                            t.next = 9;
                            break;
                          case 6:
                            (t.prev = 6),
                              (t.t0 = t.catch(1)),
                              Promise.reject(t.t0);
                          case 9:
                            if (null == (n = this.scheduleUpdate())) {
                              t.next = 13;
                              break;
                            }
                            return (t.next = 13), n;
                          case 13:
                            return t.abrupt('return', !this.isUpdatePending);
                          case 14:
                          case 'end':
                            return t.stop();
                        }
                    },
                    t,
                    this,
                    [[1, 6]]
                  );
                })),
                (a = function () {
                  var t = this,
                    e = arguments;
                  return new Promise(function (r, o) {
                    var a = i.apply(t, e);
                    function l(t) {
                      n(a, r, o, l, s, 'next', t);
                    }
                    function s(t) {
                      n(a, r, o, l, s, 'throw', t);
                    }
                    l(void 0);
                  });
                }),
                function () {
                  return a.apply(this, arguments);
                }),
            },
            {
              key: 'scheduleUpdate',
              value: function () {
                return this.performUpdate();
              },
            },
            {
              key: 'performUpdate',
              value: function () {
                var t,
                  e = this;
                if (this.isUpdatePending) {
                  this.hasUpdated,
                    this.__instanceProperties &&
                      (this.__instanceProperties.forEach(function (t, n) {
                        return (e[n] = t);
                      }),
                      (this.__instanceProperties = void 0));
                  var n = !1,
                    r = this._$changedProperties;
                  try {
                    (n = this.shouldUpdate(r))
                      ? (this.willUpdate(r),
                        null === (t = this.__controllers) ||
                          void 0 === t ||
                          t.forEach(function (t) {
                            var e;
                            return null === (e = t.hostUpdate) || void 0 === e
                              ? void 0
                              : e.call(t);
                          }),
                        this.update(r))
                      : this.__markUpdated();
                  } catch (t) {
                    throw ((n = !1), this.__markUpdated(), t);
                  }
                  n && this._$didUpdate(r);
                }
              },
            },
            {key: 'willUpdate', value: function (t) {}},
            {
              key: '_$didUpdate',
              value: function (t) {
                var e;
                null === (e = this.__controllers) ||
                  void 0 === e ||
                  e.forEach(function (t) {
                    var e;
                    return null === (e = t.hostUpdated) || void 0 === e
                      ? void 0
                      : e.call(t);
                  }),
                  this.hasUpdated ||
                    ((this.hasUpdated = !0), this.firstUpdated(t)),
                  this.updated(t);
              },
            },
            {
              key: '__markUpdated',
              value: function () {
                (this._$changedProperties = new Map()),
                  (this.isUpdatePending = !1);
              },
            },
            {
              key: 'updateComplete',
              get: function () {
                return this.getUpdateComplete();
              },
            },
            {
              key: 'getUpdateComplete',
              value: function () {
                return this.__updatePromise;
              },
            },
            {
              key: 'shouldUpdate',
              value: function (t) {
                return !0;
              },
            },
            {
              key: 'update',
              value: function (t) {
                var e = this;
                void 0 !== this.__reflectingProperties &&
                  (this.__reflectingProperties.forEach(function (t, n) {
                    return e.__propertyToAttribute(n, e[n], t);
                  }),
                  (this.__reflectingProperties = void 0)),
                  this.__markUpdated();
              },
            },
            {key: 'updated', value: function (t) {}},
            {key: 'firstUpdated', value: function (t) {}},
          ],
          [
            {
              key: 'addInitializer',
              value: function (t) {
                var e;
                this.finalize(),
                  (null !== (e = this._initializers) && void 0 !== e
                    ? e
                    : (this._initializers = [])
                  ).push(t);
              },
            },
            {
              key: 'observedAttributes',
              get: function () {
                var t = this;
                this.finalize();
                var e = [];
                return (
                  this.elementProperties.forEach(function (n, r) {
                    var i = t.__attributeNameForProperty(r, n);
                    void 0 !== i &&
                      (t.__attributeToPropertyMap.set(i, r), e.push(i));
                  }),
                  e
                );
              },
            },
            {
              key: 'createProperty',
              value: function (t) {
                var e =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : M;
                if (
                  (e.state && (e.attribute = !1),
                  this.finalize(),
                  this.elementProperties.set(t, e),
                  !e.noAccessor && !this.prototype.hasOwnProperty(t))
                ) {
                  var n = 'symbol' == typeof t ? Symbol() : '__'.concat(t),
                    r = this.getPropertyDescriptor(t, n, e);
                  void 0 !== r && Object.defineProperty(this.prototype, t, r);
                }
              },
            },
            {
              key: 'getPropertyDescriptor',
              value: function (t, e, n) {
                return {
                  get: function () {
                    return this[e];
                  },
                  set: function (r) {
                    var i = this[t];
                    (this[e] = r), this.requestUpdate(t, i, n);
                  },
                  configurable: !0,
                  enumerable: !0,
                };
              },
            },
            {
              key: 'getPropertyOptions',
              value: function (t) {
                return this.elementProperties.get(t) || M;
              },
            },
            {
              key: 'finalize',
              value: function () {
                if (this.hasOwnProperty(I)) return !1;
                this[I] = !0;
                var t = Object.getPrototypeOf(this);
                if (
                  (t.finalize(),
                  void 0 !== t._initializers &&
                    (this._initializers = m(t._initializers)),
                  (this.elementProperties = new Map(t.elementProperties)),
                  (this.__attributeToPropertyMap = new Map()),
                  this.hasOwnProperty('properties'))
                ) {
                  var e,
                    n = this.properties,
                    r = b(
                      [].concat(
                        m(Object.getOwnPropertyNames(n)),
                        m(Object.getOwnPropertySymbols(n))
                      )
                    );
                  try {
                    for (r.s(); !(e = r.n()).done; ) {
                      var i = e.value;
                      this.createProperty(i, n[i]);
                    }
                  } catch (t) {
                    r.e(t);
                  } finally {
                    r.f();
                  }
                }
                return (
                  (this.elementStyles = this.finalizeStyles(this.styles)), !0
                );
              },
            },
            {
              key: 'finalizeStyles',
              value: function (t) {
                var e = [];
                if (Array.isArray(t)) {
                  var n,
                    r = b(new Set(t.flat(1 / 0).reverse()));
                  try {
                    for (r.s(); !(n = r.n()).done; ) {
                      var i = n.value;
                      e.unshift(N(i));
                    }
                  } catch (t) {
                    r.e(t);
                  } finally {
                    r.f();
                  }
                } else void 0 !== t && e.push(N(t));
                return e;
              },
            },
            {
              key: '__attributeNameForProperty',
              value: function (t, e) {
                var n = e.attribute;
                return !1 === n
                  ? void 0
                  : 'string' == typeof n
                  ? n
                  : 'string' == typeof t
                  ? t.toLowerCase()
                  : void 0;
              },
            },
          ]
        ),
        u
      );
    })(d(HTMLElement));
  (z[I] = !0),
    (z.elementProperties = new Map()),
    (z.elementStyles = []),
    (z.shadowRootOptions = {mode: 'open'}),
    null == L || L({ReactiveElement: z}),
    (null !== ($ = A.reactiveElementVersions) && void 0 !== $
      ? $
      : (A.reactiveElementVersions = [])
    ).push('1.6.1');
  var B = window,
    H = void 0,
    F = B.trustedTypes,
    D = F
      ? F.createPolicy('lit-html', {
          createHTML: function (t) {
            return t;
          },
        })
      : void 0,
    G = '$lit$',
    q = 'lit$'.concat(String(Math.random()).slice(9), '$'),
    W = '?' + q,
    J = '<'.concat(W, '>'),
    Y = document,
    Z = function () {
      return Y.createComment('');
    },
    K = function (t) {
      return null === t || ('object' != typeof t && 'function' != typeof t);
    },
    Q = Array.isArray,
    X = function (t) {
      return (
        Q(t) || 'function' == typeof (null == t ? void 0 : t[Symbol.iterator])
      );
    },
    tt = '[ \t\n\f\r]',
    et = /<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,
    nt = /-->/g,
    rt = />/g,
    it = new RegExp(
      '>|'
        .concat(tt, '(?:(')
        .concat('[^\\s"\'>=/]', '+)(')
        .concat(tt, '*=')
        .concat(tt, '*(?:')
        .concat('[^ \t\n\f\r"\'`<>=]', '|("|\')|))|$)'),
      'g'
    ),
    ot = /'/g,
    at = /"/g,
    lt = /^(?:script|style|textarea|title)$/i,
    st = function (t) {
      return function (e) {
        for (
          var n, r = arguments.length, i = new Array(r > 1 ? r - 1 : 0), o = 1;
          o < r;
          o++
        )
          i[o - 1] = arguments[o];
        return (
          a((n = {}), '_$litType$', t), a(n, 'strings', e), a(n, 'values', i), n
        );
      };
    },
    ut = st(1),
    ct = st(2),
    ht = Symbol.for('lit-noChange'),
    dt = Symbol.for('lit-nothing'),
    ft = new WeakMap(),
    pt = Y.createTreeWalker(Y, 129, null, !1),
    vt = function (t, e) {
      for (
        var n,
          r = t.length - 1,
          i = [],
          o = 2 === e ? '<svg>' : '',
          a = et,
          l = 0;
        l < r;
        l++
      ) {
        for (
          var s = t[l], u = -1, c = void 0, h = 0, d = void 0;
          h < s.length && ((a.lastIndex = h), null !== (d = a.exec(s)));

        )
          (h = a.lastIndex),
            a === et
              ? '!--' === d[1]
                ? (a = nt)
                : void 0 !== d[1]
                ? (a = rt)
                : void 0 !== d[2]
                ? (lt.test(d[2]) && (n = new RegExp('</'.concat(d[2]), 'g')),
                  (a = it))
                : void 0 !== d[3] && (a = it)
              : a === it
              ? '>' === d[0]
                ? ((a = null != n ? n : et), (u = -1))
                : void 0 === d[1]
                ? (u = -2)
                : ((u = a.lastIndex - d[2].length),
                  (c = d[1]),
                  (a = void 0 === d[3] ? it : '"' === d[3] ? at : ot))
              : a === at || a === ot
              ? (a = it)
              : a === nt || a === rt
              ? (a = et)
              : ((a = it), (n = void 0));
        var f = a === it && t[l + 1].startsWith('/>') ? ' ' : '';
        o +=
          a === et
            ? s + J
            : u >= 0
            ? (i.push(c), s.slice(0, u) + G + s.slice(u) + q + f)
            : s + q + (-2 === u ? (i.push(void 0), l) : f);
      }
      var p = o + (t[r] || '<?>') + (2 === e ? '</svg>' : '');
      if (!Array.isArray(t) || !t.hasOwnProperty('raw')) {
        throw new Error('invalid template strings array');
      }
      return [void 0 !== D ? D.createHTML(p) : p, i];
    },
    yt = (function () {
      function t(e, n) {
        var i,
          o = e.strings,
          a = e._$litType$;
        r(this, t), (this.parts = []);
        var l = 0,
          s = 0,
          u = o.length - 1,
          c = this.parts,
          h = y(vt(o, a), 2),
          d = h[0],
          f = h[1];
        if (
          ((this.el = t.createElement(d, n)),
          (pt.currentNode = this.el.content),
          2 === a)
        ) {
          var p = this.el.content,
            v = p.firstChild;
          v.remove(), p.append.apply(p, m(v.childNodes));
        }
        for (; null !== (i = pt.nextNode()) && c.length < u; ) {
          if (1 === i.nodeType) {
            if (i.hasAttributes()) {
              var _,
                g = [],
                w = b(i.getAttributeNames());
              try {
                for (w.s(); !(_ = w.n()).done; ) {
                  var $ = _.value;
                  if ($.endsWith(G) || $.startsWith(q)) {
                    var P = f[s++];
                    if ((g.push($), void 0 !== P)) {
                      var S = i.getAttribute(P.toLowerCase() + G).split(q),
                        k = /([.?@])?(.*)/.exec(P);
                      c.push({
                        type: 1,
                        index: l,
                        name: k[2],
                        strings: S,
                        ctor:
                          '.' === k[1]
                            ? wt
                            : '?' === k[1]
                            ? Pt
                            : '@' === k[1]
                            ? St
                            : bt,
                      });
                    } else c.push({type: 6, index: l});
                  }
                }
              } catch (t) {
                w.e(t);
              } finally {
                w.f();
              }
              for (var x = 0, E = g; x < E.length; x++) {
                var C = E[x];
                i.removeAttribute(C);
              }
            }
            if (lt.test(i.tagName)) {
              var O = i.textContent.split(q),
                T = O.length - 1;
              if (T > 0) {
                i.textContent = F ? F.emptyScript : '';
                for (var N = 0; N < T; N++)
                  i.append(O[N], Z()),
                    pt.nextNode(),
                    c.push({type: 2, index: ++l});
                i.append(O[T], Z());
              }
            }
          } else if (8 === i.nodeType) {
            if (i.data === W) c.push({type: 2, index: l});
            else
              for (var A = -1; -1 !== (A = i.data.indexOf(q, A + 1)); )
                c.push({type: 7, index: l}), (A += q.length - 1);
          }
          l++;
        }
      }
      return (
        o(t, null, [
          {
            key: 'createElement',
            value: function (t, e) {
              var n = Y.createElement('template');
              return (n.innerHTML = t), n;
            },
          },
        ]),
        t
      );
    })();
  function mt(t, e) {
    var n,
      r,
      i,
      o,
      a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : t,
      l = arguments.length > 3 ? arguments[3] : void 0;
    if (e === ht) return e;
    var s =
        void 0 !== l
          ? null === (n = a.__directives) || void 0 === n
            ? void 0
            : n[l]
          : a.__directive,
      u = K(e) ? void 0 : e._$litDirective$;
    return (
      (null == s ? void 0 : s.constructor) !== u &&
        (null ===
          (r = null == s ? void 0 : s._$notifyDirectiveConnectionChanged) ||
          void 0 === r ||
          r.call(s, !1),
        void 0 === u ? (s = void 0) : (s = new u(t))._$initialize(t, a, l),
        void 0 !== l
          ? ((null !== (i = (o = a).__directives) && void 0 !== i
              ? i
              : (o.__directives = []))[l] = s)
          : (a.__directive = s)),
      void 0 !== s && (e = mt(t, s._$resolve(t, e.values), s, l)),
      e
    );
  }
  var _t = (function () {
      function t(e, n) {
        r(this, t),
          (this._$parts = []),
          (this._$disconnectableChildren = void 0),
          (this._$template = e),
          (this._$parent = n);
      }
      return (
        o(t, [
          {
            key: 'parentNode',
            get: function () {
              return this._$parent.parentNode;
            },
          },
          {
            key: '_$isConnected',
            get: function () {
              return this._$parent._$isConnected;
            },
          },
          {
            key: '_clone',
            value: function (t) {
              var e,
                n = this._$template,
                r = n.el.content,
                i = n.parts,
                o = (
                  null !== (e = null == t ? void 0 : t.creationScope) &&
                  void 0 !== e
                    ? e
                    : Y
                ).importNode(r, !0);
              pt.currentNode = o;
              for (
                var a = pt.nextNode(), l = 0, s = 0, u = i[0];
                void 0 !== u;

              ) {
                if (l === u.index) {
                  var c = void 0;
                  2 === u.type
                    ? (c = new gt(a, a.nextSibling, this, t))
                    : 1 === u.type
                    ? (c = new u.ctor(a, u.name, u.strings, this, t))
                    : 6 === u.type && (c = new kt(a, this, t)),
                    this._$parts.push(c),
                    (u = i[++s]);
                }
                l !== (null == u ? void 0 : u.index) &&
                  ((a = pt.nextNode()), l++);
              }
              return (pt.currentNode = Y), o;
            },
          },
          {
            key: '_update',
            value: function (t) {
              var e,
                n = 0,
                r = b(this._$parts);
              try {
                for (r.s(); !(e = r.n()).done; ) {
                  var i = e.value;
                  void 0 !== i &&
                    (null == H ||
                      H({
                        kind: 'set part',
                        part: i,
                        value: t[n],
                        valueIndex: n,
                        values: t,
                        templateInstance: this,
                      }),
                    void 0 !== i.strings
                      ? (i._$setValue(t, i, n), (n += i.strings.length - 2))
                      : i._$setValue(t[n])),
                    n++;
                }
              } catch (t) {
                r.e(t);
              } finally {
                r.f();
              }
            },
          },
        ]),
        t
      );
    })(),
    gt = (function () {
      function t(e, n, i, o) {
        var a;
        r(this, t),
          (this.type = 2),
          (this._$committedValue = dt),
          (this._$disconnectableChildren = void 0),
          (this._$startNode = e),
          (this._$endNode = n),
          (this._$parent = i),
          (this.options = o),
          (this.__isConnected =
            null === (a = null == o ? void 0 : o.isConnected) ||
            void 0 === a ||
            a);
      }
      return (
        o(t, [
          {
            key: '_$isConnected',
            get: function () {
              var t, e;
              return null !==
                (e =
                  null === (t = this._$parent) || void 0 === t
                    ? void 0
                    : t._$isConnected) && void 0 !== e
                ? e
                : this.__isConnected;
            },
          },
          {
            key: 'parentNode',
            get: function () {
              var t = this._$startNode.parentNode,
                e = this._$parent;
              return (
                void 0 !== e &&
                  11 === (null == t ? void 0 : t.nodeType) &&
                  (t = e.parentNode),
                t
              );
            },
          },
          {
            key: 'startNode',
            get: function () {
              return this._$startNode;
            },
          },
          {
            key: 'endNode',
            get: function () {
              return this._$endNode;
            },
          },
          {
            key: '_$setValue',
            value: function (t) {
              (t = mt(
                this,
                t,
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : this
              )),
                K(t)
                  ? t === dt || null == t || '' === t
                    ? (this._$committedValue !== dt && this._$clear(),
                      (this._$committedValue = dt))
                    : t !== this._$committedValue &&
                      t !== ht &&
                      this._commitText(t)
                  : void 0 !== t._$litType$
                  ? this._commitTemplateResult(t)
                  : void 0 !== t.nodeType
                  ? this._commitNode(t)
                  : X(t)
                  ? this._commitIterable(t)
                  : this._commitText(t);
            },
          },
          {
            key: '_insert',
            value: function (t) {
              return this._$startNode.parentNode.insertBefore(
                t,
                this._$endNode
              );
            },
          },
          {
            key: '_commitNode',
            value: function (t) {
              this._$committedValue !== t &&
                (this._$clear(), (this._$committedValue = this._insert(t)));
            },
          },
          {
            key: '_commitText',
            value: function (t) {
              this._$committedValue !== dt && K(this._$committedValue)
                ? (this._$startNode.nextSibling.data = t)
                : this._commitNode(Y.createTextNode(t));
              this._$committedValue = t;
            },
          },
          {
            key: '_commitTemplateResult',
            value: function (t) {
              var e,
                n = t.values,
                r = t._$litType$,
                i =
                  'number' == typeof r
                    ? this._$getTemplate(t)
                    : (void 0 === r.el &&
                        (r.el = yt.createElement(r.h, this.options)),
                      r);
              if (
                (null === (e = this._$committedValue) || void 0 === e
                  ? void 0
                  : e._$template) === i
              )
                this._$committedValue._update(n);
              else {
                var o = new _t(i, this),
                  a = o._clone(this.options);
                o._update(n), this._commitNode(a), (this._$committedValue = o);
              }
            },
          },
          {
            key: '_$getTemplate',
            value: function (t) {
              var e = ft.get(t.strings);
              return void 0 === e && ft.set(t.strings, (e = new yt(t))), e;
            },
          },
          {
            key: '_commitIterable',
            value: function (e) {
              Q(this._$committedValue) ||
                ((this._$committedValue = []), this._$clear());
              var n,
                r,
                i = this._$committedValue,
                o = 0,
                a = b(e);
              try {
                for (a.s(); !(r = a.n()).done; ) {
                  var l = r.value;
                  o === i.length
                    ? i.push(
                        (n = new t(
                          this._insert(Z()),
                          this._insert(Z()),
                          this,
                          this.options
                        ))
                      )
                    : (n = i[o]),
                    n._$setValue(l),
                    o++;
                }
              } catch (t) {
                a.e(t);
              } finally {
                a.f();
              }
              o < i.length &&
                (this._$clear(n && n._$endNode.nextSibling, o), (i.length = o));
            },
          },
          {
            key: '_$clear',
            value: function () {
              var t,
                e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : this._$startNode.nextSibling,
                n = arguments.length > 1 ? arguments[1] : void 0;
              for (
                null === (t = this._$notifyConnectionChanged) ||
                void 0 === t ||
                t.call(this, !1, !0, n);
                e && e !== this._$endNode;

              ) {
                var r = e.nextSibling;
                e.remove(), (e = r);
              }
            },
          },
          {
            key: 'setConnected',
            value: function (t) {
              var e;
              void 0 === this._$parent &&
                ((this.__isConnected = t),
                null === (e = this._$notifyConnectionChanged) ||
                  void 0 === e ||
                  e.call(this, t));
            },
          },
        ]),
        t
      );
    })(),
    bt = (function () {
      function t(e, n, i, o, a) {
        r(this, t),
          (this.type = 1),
          (this._$committedValue = dt),
          (this._$disconnectableChildren = void 0),
          (this.element = e),
          (this.name = n),
          (this._$parent = o),
          (this.options = a),
          i.length > 2 || '' !== i[0] || '' !== i[1]
            ? ((this._$committedValue = new Array(i.length - 1).fill(
                new String()
              )),
              (this.strings = i))
            : (this._$committedValue = dt);
      }
      return (
        o(t, [
          {
            key: 'tagName',
            get: function () {
              return this.element.tagName;
            },
          },
          {
            key: '_$isConnected',
            get: function () {
              return this._$parent._$isConnected;
            },
          },
          {
            key: '_$setValue',
            value: function (t) {
              var e =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : this,
                n = arguments.length > 2 ? arguments[2] : void 0,
                r = arguments.length > 3 ? arguments[3] : void 0,
                i = this.strings,
                o = !1;
              if (void 0 === i)
                (t = mt(this, t, e, 0)),
                  (o = !K(t) || (t !== this._$committedValue && t !== ht)) &&
                    (this._$committedValue = t);
              else {
                var a,
                  l,
                  s = t;
                for (t = i[0], a = 0; a < i.length - 1; a++)
                  (l = mt(this, s[n + a], e, a)) === ht &&
                    (l = this._$committedValue[a]),
                    o || (o = !K(l) || l !== this._$committedValue[a]),
                    l === dt
                      ? (t = dt)
                      : t !== dt && (t += (null != l ? l : '') + i[a + 1]),
                    (this._$committedValue[a] = l);
              }
              o && !r && this._commitValue(t);
            },
          },
          {
            key: '_commitValue',
            value: function (t) {
              t === dt
                ? this.element.removeAttribute(this.name)
                : this.element.setAttribute(this.name, null != t ? t : '');
            },
          },
        ]),
        t
      );
    })(),
    wt = (function (t) {
      l(n, t);
      var e = p(n);
      function n() {
        var t;
        return r(this, n), ((t = e.apply(this, arguments)).type = 3), t;
      }
      return (
        o(n, [
          {
            key: '_commitValue',
            value: function (t) {
              this.element[this.name] = t === dt ? void 0 : t;
            },
          },
        ]),
        n
      );
    })(bt),
    $t = F ? F.emptyScript : '',
    Pt = (function (t) {
      l(n, t);
      var e = p(n);
      function n() {
        var t;
        return r(this, n), ((t = e.apply(this, arguments)).type = 4), t;
      }
      return (
        o(n, [
          {
            key: '_commitValue',
            value: function (t) {
              t && t !== dt
                ? this.element.setAttribute(this.name, $t)
                : this.element.removeAttribute(this.name);
            },
          },
        ]),
        n
      );
    })(bt),
    St = (function (t) {
      l(n, t);
      var e = p(n);
      function n(t, i, o, a, l) {
        var s;
        return r(this, n), ((s = e.call(this, t, i, o, a, l)).type = 5), s;
      }
      return (
        o(n, [
          {
            key: '_$setValue',
            value: function (t) {
              var e;
              if (
                (t =
                  null !==
                    (e = mt(
                      this,
                      t,
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : this,
                      0
                    )) && void 0 !== e
                    ? e
                    : dt) !== ht
              ) {
                var n = this._$committedValue,
                  r =
                    (t === dt && n !== dt) ||
                    t.capture !== n.capture ||
                    t.once !== n.once ||
                    t.passive !== n.passive,
                  i = t !== dt && (n === dt || r);
                r && this.element.removeEventListener(this.name, this, n),
                  i && this.element.addEventListener(this.name, this, t),
                  (this._$committedValue = t);
              }
            },
          },
          {
            key: 'handleEvent',
            value: function (t) {
              var e, n;
              'function' == typeof this._$committedValue
                ? this._$committedValue.call(
                    null !==
                      (n =
                        null === (e = this.options) || void 0 === e
                          ? void 0
                          : e.host) && void 0 !== n
                      ? n
                      : this.element,
                    t
                  )
                : this._$committedValue.handleEvent(t);
            },
          },
        ]),
        n
      );
    })(bt),
    kt = (function () {
      function t(e, n, i) {
        r(this, t),
          (this.element = e),
          (this.type = 6),
          (this._$disconnectableChildren = void 0),
          (this._$parent = n),
          (this.options = i);
      }
      return (
        o(t, [
          {
            key: '_$isConnected',
            get: function () {
              return this._$parent._$isConnected;
            },
          },
          {
            key: '_$setValue',
            value: function (t) {
              mt(this, t);
            },
          },
        ]),
        t
      );
    })(),
    xt = {
      _boundAttributeSuffix: G,
      _marker: q,
      _markerMatch: W,
      _HTML_RESULT: 1,
      _getTemplateHtml: vt,
      _TemplateInstance: _t,
      _isIterable: X,
      _resolveDirective: mt,
      _ChildPart: gt,
      _AttributePart: bt,
      _BooleanAttributePart: Pt,
      _EventPart: St,
      _PropertyPart: wt,
      _ElementPart: kt,
    },
    Et = B.litHtmlPolyfillSupport;
  null == Et || Et(yt, gt),
    (null !== (P = B.litHtmlVersions) && void 0 !== P
      ? P
      : (B.litHtmlVersions = [])
    ).push('2.7.3');
  var Ct,
    Ot,
    Tt = function (t, e, n) {
      var r,
        i,
        o =
          null !== (r = null == n ? void 0 : n.renderBefore) && void 0 !== r
            ? r
            : e,
        a = o._$litPart$;
      if (void 0 === a) {
        var l =
          null !== (i = null == n ? void 0 : n.renderBefore) && void 0 !== i
            ? i
            : null;
        o._$litPart$ = a = new gt(
          e.insertBefore(Z(), l),
          l,
          void 0,
          null != n ? n : {}
        );
      }
      return a._$setValue(t), a;
    },
    Nt = z,
    At = (function (t) {
      l(n, t);
      var e = p(n);
      function n() {
        var t;
        return (
          r(this, n),
          ((t = e.apply(this, arguments)).renderOptions = {host: f(t)}),
          (t.__childPart = void 0),
          t
        );
      }
      return (
        o(n, [
          {
            key: 'createRenderRoot',
            value: function () {
              var t,
                e,
                r = v(s(n.prototype), 'createRenderRoot', this).call(this);
              return (
                (null !== (t = (e = this.renderOptions).renderBefore) &&
                  void 0 !== t) ||
                  (e.renderBefore = r.firstChild),
                r
              );
            },
          },
          {
            key: 'update',
            value: function (t) {
              var e = this.render();
              this.hasUpdated ||
                (this.renderOptions.isConnected = this.isConnected),
                v(s(n.prototype), 'update', this).call(this, t),
                (this.__childPart = Tt(e, this.renderRoot, this.renderOptions));
            },
          },
          {
            key: 'connectedCallback',
            value: function () {
              var t;
              v(s(n.prototype), 'connectedCallback', this).call(this),
                null === (t = this.__childPart) ||
                  void 0 === t ||
                  t.setConnected(!0);
            },
          },
          {
            key: 'disconnectedCallback',
            value: function () {
              var t;
              v(s(n.prototype), 'disconnectedCallback', this).call(this),
                null === (t = this.__childPart) ||
                  void 0 === t ||
                  t.setConnected(!1);
            },
          },
          {
            key: 'render',
            value: function () {
              return ht;
            },
          },
        ]),
        n
      );
    })(z);
  (At.finalized = !0),
    (At._$litElement$ = !0),
    null === (Ct = globalThis.litElementHydrateSupport) ||
      void 0 === Ct ||
      Ct.call(globalThis, {LitElement: At});
  var Vt = globalThis.litElementPolyfillSupport;
  null == Vt || Vt({LitElement: At});
  (null !== (Ot = globalThis.litElementVersions) && void 0 !== Ot
    ? Ot
    : (globalThis.litElementVersions = [])
  ).push('3.3.2');
  return (
    (t.CSSResult = C),
    (t.LitElement = At),
    (t.ReactiveElement = z),
    (t.UpdatingElement = Nt),
    (t._$LE = {
      _$attributeToProperty: function (t, e, n) {
        t._$attributeToProperty(e, n);
      },
      _$changedProperties: function (t) {
        return t._$changedProperties;
      },
    }),
    (t._$LH = xt),
    (t.adoptStyles = T),
    (t.css = function (t) {
      for (
        var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1;
        r < e;
        r++
      )
        n[r - 1] = arguments[r];
      var i =
        1 === t.length
          ? t[0]
          : n.reduce(function (e, n, r) {
              return (
                e +
                (function (t) {
                  if (!0 === t._$cssResult$) return t.cssText;
                  if ('number' == typeof t) return t;
                  throw new Error(
                    "Value passed to 'css' function must be a 'css' function result: " +
                      ''.concat(
                        t,
                        ". Use 'unsafeCSS' to pass non-literal values, but take care "
                      ) +
                      'to ensure page security.'
                  );
                })(n) +
                t[r + 1]
              );
            }, t[0]);
      return new C(i, t, x);
    }),
    (t.defaultConverter = U),
    (t.getCompatibleStyle = N),
    (t.html = ut),
    (t.isServer = false),
    (t.noChange = ht),
    (t.notEqual = R),
    (t.nothing = dt),
    (t.render = Tt),
    (t.supportsAdoptingStyleSheets = k),
    (t.svg = ct),
    (t.unsafeCSS = O),
    Object.defineProperty(t, '__esModule', {value: !0}),
    t
  );
})({});
//# sourceMappingURL=lit-core.iife.min.js.map
